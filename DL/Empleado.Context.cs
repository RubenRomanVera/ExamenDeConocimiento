//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamenDeConocimientoNetEntities : DbContext
    {
        public ExamenDeConocimientoNetEntities()
            : base("name=ExamenDeConocimientoNetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatPuesto> CatPuesto { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
    
        public virtual int EmpleadoAdd(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idCatPuesto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idCatPuestoParameter = idCatPuesto.HasValue ?
                new ObjectParameter("IdCatPuesto", idCatPuesto) :
                new ObjectParameter("IdCatPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idCatPuestoParameter);
        }
    
        public virtual int EmpleadoDelete(Nullable<int> id_NumEmp)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoDelete", id_NumEmpParameter);
        }
    
        public virtual ObjectResult<EmpleadoGetAll_Result> EmpleadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetAll_Result>("EmpleadoGetAll");
        }
    
        public virtual ObjectResult<EmpleadoGetById_Result> EmpleadoGetById(Nullable<int> id_NumEmp)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetById_Result>("EmpleadoGetById", id_NumEmpParameter);
        }
    
        public virtual int EmpleadoUpdate(Nullable<int> id_NumEmp, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idCatPuesto)
        {
            var id_NumEmpParameter = id_NumEmp.HasValue ?
                new ObjectParameter("Id_NumEmp", id_NumEmp) :
                new ObjectParameter("Id_NumEmp", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idCatPuestoParameter = idCatPuesto.HasValue ?
                new ObjectParameter("IdCatPuesto", idCatPuesto) :
                new ObjectParameter("IdCatPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoUpdate", id_NumEmpParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idCatPuestoParameter);
        }
    
        public virtual int T_EMPLEADO_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("T_EMPLEADO_GetAll");
        }
    
        public virtual ObjectResult<CatPuestoGetAll_Result> CatPuestoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CatPuestoGetAll_Result>("CatPuestoGetAll");
        }
    }
}
